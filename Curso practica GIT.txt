git init	// Se inicializa el repositorio

git config --global user.email "mail@mail.com"	// Se idica Tu mail

git config --global user.name "nombre"	// se indica tu nombre

git add [Filename]    // Agregamos el archivo al area de Staging

git commit -m "mensaje": Confirmamos los cambios y versionamos en el repositorio local

git status: vemos el estado de nuestro repositorio

git log: vemos el historial de nuestro repositorio

git checkuot -- {nombre de archivo}: deshacemos los cambios que habiamos realizado sobre {nombre de archivo}

git diff: nos muestra las diferencias entre los archivos que le pidamos

git rm {nombre de archivo}: elimina un archivo del repositorio y lo mete en el area de staging para confirmar el borrado haciendo un commit o volver a agregarlo al repositorio

git mv {nombre de archivo} {nuevo nombre de archivo}: renombra un archivo del repositorio y lo pone en el staging area para confirmar con un commit el cabio o volver a como estaba antes.

(touch {nombre de archivo junto con extencion}: en el bash de git para crear un archivo)

git clone {link del repo remoto} {nombre de carpeta}
 linea del clone: el nombre de la carpeta sera el que tendra la carpeta que crea git cuando clona el repositorio remoto y lo guarda en esa carpeta local que crea con ese nombre.


git remote add {nombre por defecto es origin} {link del repo remoto} : comando para asociar un repositorio remoto con el nombre especificado, por defecto es origin.

git push -u origin master : comando para actualizar el repo remoto con el repo local, el repo remoto se especifica con el nombre con el que lo asociamos, en este caso es origin, y master es la rama la cual estamos actualizando. 

git pull origin master: se traen el repositorio remoto al local y hace un merge automatico a los archivos que no esten en conflicto con otro desarrollador que tambien halla hecho cambios a los mismo archivos

git fetch origin master: solo trae el repo remoto a un branch oculto del repo local para luego hacer un merge manual a la rama master.

git branch {Nombre de la nueva rama}: se crea una rama de desarrollo nueva pero no apunta todavia a la misma.

git checkout {Nombre de la rama}: se apunta a la rama de desarrollo nombrada

git branch -d {nombre de la Rama}: se usa para eliminar la rama nombrada

git push {referencia repo remoto} {nombre de rama creada}: se agrega la rama en el repositorio remoto.
